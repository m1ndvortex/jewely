# Generated by Django 4.2.11 on 2025-10-25 07:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("notifications", "0003_alter_notification_notification_type_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="SMSTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Unique name for this SMS template", max_length=100, unique=True
                    ),
                ),
                (
                    "message_template",
                    models.TextField(
                        help_text="SMS message template (supports Django template syntax)",
                        max_length=1600,
                    ),
                ),
                (
                    "sms_type",
                    models.CharField(
                        choices=[
                            ("TRANSACTIONAL", "Transactional"),
                            ("MARKETING", "Marketing"),
                            ("SYSTEM", "System"),
                            ("ALERT", "Alert"),
                        ],
                        default="TRANSACTIONAL",
                        help_text="Type of SMS this template is for",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this template is active and can be used"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "SMS Template",
                "verbose_name_plural": "SMS Templates",
                "db_table": "notifications_sms_template",
                "indexes": [
                    models.Index(
                        fields=["sms_type", "is_active"], name="sms_template_type_active_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="SMSOptOut",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "opted_out_at",
                    models.DateTimeField(auto_now_add=True, help_text="When the user opted out"),
                ),
                (
                    "reason",
                    models.CharField(
                        blank=True, help_text="Reason for opting out", max_length=255, null=True
                    ),
                ),
                (
                    "transactional_opt_out",
                    models.BooleanField(default=False, help_text="Opted out of transactional SMS"),
                ),
                (
                    "marketing_opt_out",
                    models.BooleanField(
                        default=True, help_text="Opted out of marketing SMS (default: True)"
                    ),
                ),
                (
                    "system_opt_out",
                    models.BooleanField(default=False, help_text="Opted out of system SMS"),
                ),
                (
                    "alert_opt_out",
                    models.BooleanField(default=False, help_text="Opted out of alert SMS"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="User who opted out of SMS",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sms_opt_out",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "SMS Opt-Out",
                "verbose_name_plural": "SMS Opt-Outs",
                "db_table": "notifications_sms_opt_out",
            },
        ),
        migrations.CreateModel(
            name="SMSNotification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("message", models.TextField(help_text="SMS message content", max_length=1600)),
                ("to_phone", models.CharField(help_text="Recipient phone number", max_length=20)),
                (
                    "from_phone",
                    models.CharField(
                        blank=True, help_text="Sender phone number", max_length=20, null=True
                    ),
                ),
                (
                    "template_name",
                    models.CharField(
                        blank=True, help_text="SMS template used", max_length=100, null=True
                    ),
                ),
                (
                    "sms_type",
                    models.CharField(
                        choices=[
                            ("TRANSACTIONAL", "Transactional"),
                            ("MARKETING", "Marketing"),
                            ("SYSTEM", "System"),
                            ("ALERT", "Alert"),
                        ],
                        default="TRANSACTIONAL",
                        help_text="Type of SMS",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("QUEUED", "Queued"),
                            ("SENT", "Sent"),
                            ("DELIVERED", "Delivered"),
                            ("FAILED", "Failed"),
                            ("UNDELIVERED", "Undelivered"),
                        ],
                        default="PENDING",
                        help_text="Current delivery status",
                        max_length=20,
                    ),
                ),
                (
                    "message_sid",
                    models.CharField(
                        blank=True, help_text="Twilio message SID", max_length=255, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("failed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if delivery failed", null=True
                    ),
                ),
                (
                    "error_code",
                    models.CharField(
                        blank=True,
                        help_text="Twilio error code if applicable",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, help_text="When to send this SMS (for scheduled SMS)", null=True
                    ),
                ),
                (
                    "campaign_id",
                    models.CharField(
                        blank=True,
                        help_text="Campaign ID for marketing SMS",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Cost of sending this SMS",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "price_unit",
                    models.CharField(
                        blank=True, help_text="Currency unit for price", max_length=10, null=True
                    ),
                ),
                (
                    "notification",
                    models.OneToOneField(
                        blank=True,
                        help_text="Associated in-app notification",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sms_notification",
                        to="notifications.notification",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who received this SMS",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sms_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "SMS Notification",
                "verbose_name_plural": "SMS Notifications",
                "db_table": "notifications_sms",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["user", "-created_at"], name="sms_user_created_idx"),
                    models.Index(fields=["status"], name="sms_status_idx"),
                    models.Index(fields=["scheduled_at"], name="sms_scheduled_idx"),
                    models.Index(fields=["campaign_id"], name="sms_campaign_idx"),
                    models.Index(fields=["message_sid"], name="sms_message_sid_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="SMSCampaign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(help_text="Campaign name", max_length=255)),
                (
                    "target_roles",
                    models.JSONField(blank=True, default=list, help_text="User roles to target"),
                ),
                (
                    "target_tenant_status",
                    models.JSONField(
                        blank=True, default=list, help_text="Tenant statuses to target"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("SCHEDULED", "Scheduled"),
                            ("SENDING", "Sending"),
                            ("SENT", "Sent"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, help_text="When to send this campaign", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("total_recipients", models.IntegerField(default=0)),
                ("sms_sent", models.IntegerField(default=0)),
                ("sms_delivered", models.IntegerField(default=0)),
                ("sms_failed", models.IntegerField(default=0)),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=4,
                        default=0,
                        help_text="Total cost of campaign",
                        max_digits=10,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_sms_campaigns",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific users to target (leave empty for all users)",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        help_text="SMS template to use",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="notifications.smstemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "SMS Campaign",
                "verbose_name_plural": "SMS Campaigns",
                "db_table": "notifications_sms_campaign",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["status"], name="sms_campaign_status_idx"),
                    models.Index(fields=["scheduled_at"], name="sms_campaign_scheduled_idx"),
                ],
            },
        ),
    ]
