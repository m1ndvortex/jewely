# Generated by Django 4.2.11 on 2025-10-23 09:37

import uuid
from decimal import Decimal

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("inventory", "0002_enable_rls"),
        ("repair", "0002_enable_rls"),
    ]

    operations = [
        migrations.AddField(
            model_name="customorder",
            name="created_inventory_item",
            field=models.ForeignKey(
                blank=True,
                help_text="Inventory item created from this custom order when completed",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="source_custom_order",
                to="inventory.inventoryitem",
            ),
        ),
        migrations.AddField(
            model_name="customorder",
            name="labor_cost",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Estimated labor cost",
                max_digits=12,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
            ),
        ),
        migrations.AddField(
            model_name="customorder",
            name="material_cost",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Total cost of materials required",
                max_digits=12,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
            ),
        ),
        migrations.AddField(
            model_name="customorder",
            name="overhead_percentage",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("20.00"),
                help_text="Overhead percentage to add to costs",
                max_digits=5,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
            ),
        ),
        migrations.AddField(
            model_name="customorder",
            name="profit_margin_percentage",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("30.00"),
                help_text="Profit margin percentage",
                max_digits=5,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
            ),
        ),
        migrations.CreateModel(
            name="MaterialRequirement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "material_type",
                    models.CharField(
                        choices=[
                            ("GOLD", "Gold"),
                            ("SILVER", "Silver"),
                            ("PLATINUM", "Platinum"),
                            ("DIAMOND", "Diamond"),
                            ("GEMSTONE", "Gemstone"),
                            ("PEARL", "Pearl"),
                            ("CHAIN", "Chain"),
                            ("FINDING", "Finding/Component"),
                            ("TOOL", "Tool/Equipment"),
                            ("OTHER", "Other"),
                        ],
                        help_text="Type of material",
                        max_length=20,
                    ),
                ),
                (
                    "material_name",
                    models.CharField(help_text="Name/description of the material", max_length=255),
                ),
                (
                    "specifications",
                    models.JSONField(
                        default=dict,
                        help_text="Detailed specifications (purity, color, grade, etc.)",
                    ),
                ),
                (
                    "quantity_required",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Quantity required",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.001"))],
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("GRAMS", "Grams"),
                            ("PIECES", "Pieces"),
                            ("CARATS", "Carats"),
                            ("METERS", "Meters"),
                            ("SETS", "Sets"),
                        ],
                        help_text="Unit of measurement",
                        max_length=15,
                    ),
                ),
                (
                    "estimated_cost_per_unit",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Estimated cost per unit",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "actual_cost_per_unit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Actual cost per unit",
                        max_digits=12,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "supplier_info",
                    models.CharField(default="", help_text="Supplier information", max_length=255),
                ),
                (
                    "notes",
                    models.TextField(
                        default="", help_text="Additional notes about this material requirement"
                    ),
                ),
                (
                    "is_acquired",
                    models.BooleanField(
                        default=False, help_text="Whether this material has been acquired"
                    ),
                ),
                (
                    "acquired_date",
                    models.DateTimeField(
                        blank=True, help_text="Date when material was acquired", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "custom_order",
                    models.ForeignKey(
                        help_text="Custom order this material is required for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="material_requirements",
                        to="repair.customorder",
                    ),
                ),
            ],
            options={
                "db_table": "material_requirements",
                "ordering": ["material_type", "material_name"],
                "indexes": [
                    models.Index(
                        fields=["custom_order", "is_acquired"],
                        name="material_re_custom__0fb28b_idx",
                    ),
                    models.Index(
                        fields=["custom_order", "material_type"],
                        name="material_re_custom__508f24_idx",
                    ),
                ],
            },
        ),
    ]
