# Generated by Django 4.2.11 on 2025-10-27 16:12

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.WAFFLE_FLAG_MODEL),
        ("core", "0014_add_comprehensive_audit_logging"),
    ]

    operations = [
        migrations.CreateModel(
            name="ABTestVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Unique name for this A/B test", max_length=100, unique=True
                    ),
                ),
                (
                    "control_group_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=50.0,
                        help_text="Percentage of users in control group (0-100)",
                        max_digits=5,
                    ),
                ),
                (
                    "variant_group_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=50.0,
                        help_text="Percentage of users in variant group (0-100)",
                        max_digits=5,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Description of what is being tested"),
                ),
                (
                    "hypothesis",
                    models.TextField(
                        blank=True, help_text="What you expect to learn from this test"
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="When the test started"
                    ),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the test ended (null if still running)",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this test is currently running"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_ab_tests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "flag",
                    models.ForeignKey(
                        help_text="Feature flag being tested",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ab_tests",
                        to=settings.WAFFLE_FLAG_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "A/B Test Variant",
                "verbose_name_plural": "A/B Test Variants",
                "db_table": "core_ab_test_variant",
            },
        ),
        migrations.CreateModel(
            name="TenantFeatureFlag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        default=False, help_text="Override flag state for this tenant"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Reason for override (e.g., beta testing, early access)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_tenant_flags",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "flag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenant_overrides",
                        to=settings.WAFFLE_FLAG_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feature_flags",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tenant Feature Flag",
                "verbose_name_plural": "Tenant Feature Flags",
                "db_table": "core_tenant_feature_flag",
                "indexes": [
                    models.Index(fields=["tenant", "flag"], name="core_tenant_tenant__7afaa8_idx"),
                    models.Index(fields=["enabled"], name="core_tenant_enabled_864076_idx"),
                ],
                "unique_together": {("tenant", "flag")},
            },
        ),
        migrations.CreateModel(
            name="FeatureFlagMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("flag_name", models.CharField(max_length=100)),
                (
                    "variant_group",
                    models.CharField(
                        choices=[("control", "Control"), ("variant", "Variant"), ("none", "None")],
                        default="none",
                        help_text="Which group the user is in for A/B testing",
                        max_length=20,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        help_text="Type of event (e.g., 'viewed', 'clicked', 'converted')",
                        max_length=50,
                    ),
                ),
                (
                    "event_data",
                    models.JSONField(blank=True, help_text="Additional event data", null=True),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "ab_test",
                    models.ForeignKey(
                        blank=True,
                        help_text="A/B test this metric belongs to (if any)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="core.abtestvariant",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flag_metrics",
                        to="core.tenant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flag_metrics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Feature Flag Metric",
                "verbose_name_plural": "Feature Flag Metrics",
                "db_table": "core_feature_flag_metric",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["flag_name", "timestamp"], name="core_featur_flag_na_d7704f_idx"
                    ),
                    models.Index(
                        fields=["ab_test", "variant_group", "event_type"],
                        name="core_featur_ab_test_cce4e6_idx",
                    ),
                    models.Index(
                        fields=["tenant", "timestamp"], name="core_featur_tenant__4fd2f1_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="FeatureFlagHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("flag_name", models.CharField(max_length=100)),
                (
                    "flag_type",
                    models.CharField(
                        choices=[
                            ("flag", "Flag"),
                            ("switch", "Switch"),
                            ("sample", "Sample"),
                            ("tenant_override", "Tenant Override"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("enabled", "Enabled"),
                            ("disabled", "Disabled"),
                            ("percentage_changed", "Percentage Changed"),
                            ("emergency_disabled", "Emergency Disabled"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "old_value",
                    models.JSONField(
                        blank=True, help_text="Previous state before change", null=True
                    ),
                ),
                (
                    "new_value",
                    models.JSONField(blank=True, help_text="New state after change", null=True),
                ),
                ("reason", models.TextField(blank=True, help_text="Reason for the change")),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="flag_changes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        blank=True,
                        help_text="Tenant if this is a tenant-specific change",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feature Flag History",
                "verbose_name_plural": "Feature Flag History",
                "db_table": "core_feature_flag_history",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["flag_name", "timestamp"], name="core_featur_flag_na_957e22_idx"
                    ),
                    models.Index(
                        fields=["tenant", "timestamp"], name="core_featur_tenant__9cba05_idx"
                    ),
                    models.Index(fields=["action"], name="core_featur_action_43ca32_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="EmergencyKillSwitch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "flag_name",
                    models.CharField(
                        help_text="Name of the flag to kill", max_length=100, unique=True
                    ),
                ),
                ("reason", models.TextField(help_text="Reason for emergency disable")),
                ("disabled_at", models.DateTimeField(auto_now_add=True)),
                (
                    "re_enabled_at",
                    models.DateTimeField(
                        blank=True, help_text="When the feature was re-enabled", null=True
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this kill switch is currently active"
                    ),
                ),
                (
                    "disabled_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="emergency_kills",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "re_enabled_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="emergency_re_enables",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Emergency Kill Switch",
                "verbose_name_plural": "Emergency Kill Switches",
                "db_table": "core_emergency_kill_switch",
                "ordering": ["-disabled_at"],
                "indexes": [
                    models.Index(
                        fields=["flag_name", "is_active"], name="core_emerge_flag_na_451f3d_idx"
                    ),
                    models.Index(fields=["disabled_at"], name="core_emerge_disable_2e0fa4_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="abtestvariant",
            index=models.Index(fields=["flag", "is_active"], name="core_ab_tes_flag_id_07ccf3_idx"),
        ),
        migrations.AddIndex(
            model_name="abtestvariant",
            index=models.Index(
                fields=["start_date", "end_date"], name="core_ab_tes_start_d_d35c4a_idx"
            ),
        ),
    ]
