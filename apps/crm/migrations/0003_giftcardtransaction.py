# Generated by Django 4.2.11 on 2025-10-22 20:15

import uuid
from decimal import Decimal

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("sales", "0003_add_discount_fields"),
        ("crm", "0002_enable_rls"),
    ]

    operations = [
        migrations.CreateModel(
            name="GiftCardTransaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the transaction",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("ISSUED", "Gift Card Issued"),
                            ("REDEEMED", "Gift Card Redeemed"),
                            ("REFUNDED", "Gift Card Refunded"),
                            ("EXPIRED", "Gift Card Expired"),
                            ("CANCELLED", "Gift Card Cancelled"),
                            ("STORE_CREDIT_ADDED", "Store Credit Added"),
                            ("STORE_CREDIT_USED", "Store Credit Used"),
                            ("STORE_CREDIT_REFUNDED", "Store Credit Refunded"),
                        ],
                        help_text="Type of transaction",
                        max_length=30,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Transaction amount",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "description",
                    models.CharField(help_text="Description of the transaction", max_length=255),
                ),
                (
                    "previous_balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Balance before this transaction",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "new_balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Balance after this transaction",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional transaction metadata"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the transaction was created"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this transaction",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer this transaction relates to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gift_card_transactions",
                        to="crm.customer",
                    ),
                ),
                (
                    "gift_card",
                    models.ForeignKey(
                        blank=True,
                        help_text="Gift card this transaction relates to (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="crm.giftcard",
                    ),
                ),
                (
                    "sale",
                    models.ForeignKey(
                        blank=True,
                        help_text="Sale that generated this transaction (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="gift_card_transactions",
                        to="sales.sale",
                    ),
                ),
            ],
            options={
                "verbose_name": "Gift Card Transaction",
                "verbose_name_plural": "Gift Card Transactions",
                "db_table": "crm_gift_card_transactions",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["gift_card", "-created_at"], name="gift_trans_card_date_idx"
                    ),
                    models.Index(
                        fields=["customer", "-created_at"], name="gift_trans_cust_date_idx"
                    ),
                    models.Index(fields=["transaction_type"], name="gift_trans_type_idx"),
                ],
            },
        ),
    ]
