# Generated by Django 4.2.11 on 2025-11-01 19:24

import uuid
from decimal import Decimal

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("django_ledger", "0016_remove_accountmodel_django_ledg_coa_mod_e19964_idx_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("crm", "0004_add_customer_accounting_fields"),
        ("core", "0025_add_documentation_models"),
        ("accounting", "0003_create_bill_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(help_text="Unique invoice number", max_length=50),
                ),
                (
                    "invoice_date",
                    models.DateField(
                        default=django.utils.timezone.now, help_text="Date when invoice was issued"
                    ),
                ),
                ("due_date", models.DateField(help_text="Date when payment is due")),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Subtotal before tax",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "tax",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Tax amount",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total amount including tax",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Amount paid so far",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("SENT", "Sent"),
                            ("PARTIALLY_PAID", "Partially Paid"),
                            ("PAID", "Paid"),
                            ("OVERDUE", "Overdue"),
                            ("VOID", "Void"),
                        ],
                        default="DRAFT",
                        help_text="Current status of the invoice",
                        max_length=20,
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Internal notes about this invoice"),
                ),
                (
                    "customer_notes",
                    models.TextField(blank=True, help_text="Notes visible to customer"),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True,
                        help_text="Additional reference number (PO number, etc.)",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when invoice was sent to customer",
                        null=True,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this invoice",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_invoices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer who will pay this invoice",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="invoices",
                        to="crm.customer",
                    ),
                ),
                (
                    "journal_entry",
                    models.ForeignKey(
                        blank=True,
                        help_text="Journal entry created for this invoice",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="invoices",
                        to="django_ledger.journalentrymodel",
                    ),
                ),
                (
                    "sent_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who sent this invoice",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sent_invoices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        help_text="Tenant that owns this invoice",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice",
                "verbose_name_plural": "Invoices",
                "db_table": "accounting_invoices",
                "ordering": ["-invoice_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CreditMemo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "credit_memo_number",
                    models.CharField(help_text="Unique credit memo number", max_length=50),
                ),
                (
                    "credit_date",
                    models.DateField(
                        default=django.utils.timezone.now, help_text="Date when credit was issued"
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Credit amount",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.01"))],
                    ),
                ),
                (
                    "amount_used",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Amount already applied to invoices",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("AVAILABLE", "Available"),
                            ("APPLIED", "Applied"),
                            ("VOID", "Void"),
                        ],
                        default="AVAILABLE",
                        help_text="Current status of the credit memo",
                        max_length=20,
                    ),
                ),
                (
                    "reason",
                    models.CharField(help_text="Reason for issuing this credit", max_length=255),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Internal notes about this credit memo"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "applied_at",
                    models.DateTimeField(
                        blank=True, help_text="Timestamp when credit was applied", null=True
                    ),
                ),
                (
                    "applied_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who applied this credit",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="applied_credit_memos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "applied_to_invoice",
                    models.ForeignKey(
                        blank=True,
                        help_text="Invoice this credit was applied to (if any)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="applied_credits",
                        to="accounting.invoice",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this credit memo",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_credit_memos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer who receives this credit",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="credit_memos",
                        to="crm.customer",
                    ),
                ),
                (
                    "journal_entry",
                    models.ForeignKey(
                        blank=True,
                        help_text="Journal entry created for this credit memo",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="credit_memos",
                        to="django_ledger.journalentrymodel",
                    ),
                ),
                (
                    "original_invoice",
                    models.ForeignKey(
                        blank=True,
                        help_text="Original invoice this credit is related to (if any)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="credit_memos",
                        to="accounting.invoice",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        help_text="Tenant that owns this credit memo",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="credit_memos",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Credit Memo",
                "verbose_name_plural": "Credit Memos",
                "db_table": "accounting_credit_memos",
                "ordering": ["-credit_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InvoicePayment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "payment_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        help_text="Date when payment was received",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Payment amount",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.01"))],
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("CASH", "Cash"),
                            ("CHECK", "Check"),
                            ("CARD", "Credit/Debit Card"),
                            ("BANK_TRANSFER", "Bank Transfer"),
                            ("ACH", "ACH Transfer"),
                            ("WIRE", "Wire Transfer"),
                            ("PAYPAL", "PayPal"),
                            ("STRIPE", "Stripe"),
                            ("OTHER", "Other"),
                        ],
                        default="CHECK",
                        help_text="Method of payment",
                        max_length=20,
                    ),
                ),
                (
                    "bank_account",
                    models.CharField(
                        blank=True,
                        help_text="Bank account where payment was deposited",
                        max_length=100,
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True,
                        help_text="Check number, transaction ID, or other reference",
                        max_length=100,
                    ),
                ),
                ("notes", models.TextField(blank=True, help_text="Notes about this payment")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who recorded this payment",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_invoice_payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        help_text="Invoice this payment is for",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="payments",
                        to="accounting.invoice",
                    ),
                ),
                (
                    "journal_entry",
                    models.ForeignKey(
                        blank=True,
                        help_text="Journal entry created for this payment",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="invoice_payments",
                        to="django_ledger.journalentrymodel",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        help_text="Tenant that owns this payment",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoice_payments",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice Payment",
                "verbose_name_plural": "Invoice Payments",
                "db_table": "accounting_invoice_payments",
                "ordering": ["-payment_date", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["tenant", "payment_date"], name="accounting__tenant__bdff8b_idx"
                    ),
                    models.Index(fields=["invoice"], name="accounting__invoice_31d3b4_idx"),
                    models.Index(fields=["payment_method"], name="accounting__payment_bd5303_idx"),
                    models.Index(
                        fields=["reference_number"], name="accounting__referen_401189_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="InvoiceLine",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("item", models.CharField(help_text="Product or service name", max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Detailed description of the item or service"
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.00"),
                        help_text="Quantity",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.01"))],
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price per unit",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total amount for this line (quantity × unit_price)",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Additional notes about this line item"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "invoice",
                    models.ForeignKey(
                        help_text="Invoice this line belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="accounting.invoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice Line",
                "verbose_name_plural": "Invoice Lines",
                "db_table": "accounting_invoice_lines",
                "ordering": ["created_at"],
                "indexes": [
                    models.Index(fields=["invoice"], name="accounting__invoice_868640_idx")
                ],
            },
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(fields=["tenant", "status"], name="accounting__tenant__0df710_idx"),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["tenant", "customer"], name="accounting__tenant__d2fe88_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["tenant", "invoice_date"], name="accounting__tenant__c9ff4c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(fields=["due_date"], name="accounting__due_dat_79066e_idx"),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(fields=["status", "due_date"], name="accounting__status_9f82a4_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="invoice",
            unique_together={("tenant", "invoice_number")},
        ),
        migrations.AddIndex(
            model_name="creditmemo",
            index=models.Index(fields=["tenant", "status"], name="accounting__tenant__bf4d08_idx"),
        ),
        migrations.AddIndex(
            model_name="creditmemo",
            index=models.Index(
                fields=["tenant", "customer"], name="accounting__tenant__a9a98a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="creditmemo",
            index=models.Index(fields=["credit_date"], name="accounting__credit__8762e6_idx"),
        ),
        migrations.AddIndex(
            model_name="creditmemo",
            index=models.Index(fields=["status"], name="accounting__status_7c8518_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="creditmemo",
            unique_together={("tenant", "credit_memo_number")},
        ),
    ]
