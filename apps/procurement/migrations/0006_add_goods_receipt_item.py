# Generated by Django 4.2.11 on 2025-10-23 15:32

import uuid

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("inventory", "0003_add_inventory_transfer_models"),
        ("procurement", "0005_purchaseorderapprovalthreshold"),
    ]

    operations = [
        migrations.CreateModel(
            name="GoodsReceiptItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "quantity_received",
                    models.IntegerField(
                        help_text="Quantity actually received",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "quantity_accepted",
                    models.IntegerField(
                        help_text="Quantity accepted after quality check",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "quantity_rejected",
                    models.IntegerField(
                        default=0,
                        help_text="Quantity rejected due to quality issues",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "quality_check_passed",
                    models.BooleanField(
                        blank=True,
                        help_text="Whether quality check passed for this item",
                        null=True,
                    ),
                ),
                (
                    "quality_notes",
                    models.TextField(blank=True, help_text="Notes from quality inspection"),
                ),
                (
                    "has_discrepancy",
                    models.BooleanField(
                        default=False, help_text="Whether there are discrepancies for this item"
                    ),
                ),
                (
                    "discrepancy_reason",
                    models.CharField(
                        blank=True, help_text="Reason for discrepancy", max_length=255
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "goods_receipt",
                    models.ForeignKey(
                        help_text="Goods receipt this item belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="procurement.goodsreceipt",
                    ),
                ),
                (
                    "inventory_item",
                    models.ForeignKey(
                        blank=True,
                        help_text="Inventory item created from this receipt",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="receipt_items",
                        to="inventory.inventoryitem",
                    ),
                ),
                (
                    "purchase_order_item",
                    models.ForeignKey(
                        help_text="Purchase order item being received",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="receipt_items",
                        to="procurement.purchaseorderitem",
                    ),
                ),
            ],
            options={
                "db_table": "procurement_goods_receipt_items",
                "ordering": ["created_at"],
                "indexes": [
                    models.Index(fields=["goods_receipt"], name="procurement_goods_r_c90b41_idx"),
                    models.Index(
                        fields=["purchase_order_item"], name="procurement_purchas_514dee_idx"
                    ),
                    models.Index(fields=["has_discrepancy"], name="procurement_has_dis_374f09_idx"),
                ],
            },
        ),
    ]
