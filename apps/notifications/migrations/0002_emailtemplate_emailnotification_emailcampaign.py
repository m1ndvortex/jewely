# Generated by Django 4.2.11 on 2025-10-24 21:36

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("notifications", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Unique name for this email template", max_length=100, unique=True
                    ),
                ),
                (
                    "subject_template",
                    models.CharField(
                        help_text="Template for email subject (supports Django template syntax)",
                        max_length=255,
                    ),
                ),
                ("html_template", models.TextField(help_text="HTML template for email body")),
                (
                    "text_template",
                    models.TextField(
                        blank=True,
                        help_text="Plain text template for email body (optional)",
                        null=True,
                    ),
                ),
                (
                    "email_type",
                    models.CharField(
                        choices=[
                            ("TRANSACTIONAL", "Transactional"),
                            ("MARKETING", "Marketing"),
                            ("SYSTEM", "System"),
                        ],
                        default="TRANSACTIONAL",
                        help_text="Type of email this template is for",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this template is active and can be used"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Email Template",
                "verbose_name_plural": "Email Templates",
                "db_table": "notifications_email_template",
                "indexes": [
                    models.Index(
                        fields=["email_type", "is_active"], name="email_template_type_active_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="EmailNotification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("subject", models.CharField(help_text="Email subject", max_length=255)),
                (
                    "to_email",
                    models.EmailField(help_text="Recipient email address", max_length=254),
                ),
                ("from_email", models.EmailField(help_text="Sender email address", max_length=254)),
                (
                    "template_name",
                    models.CharField(
                        blank=True, help_text="Email template used", max_length=100, null=True
                    ),
                ),
                (
                    "email_type",
                    models.CharField(
                        choices=[
                            ("TRANSACTIONAL", "Transactional"),
                            ("MARKETING", "Marketing"),
                            ("SYSTEM", "System"),
                        ],
                        default="TRANSACTIONAL",
                        help_text="Type of email",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("SENT", "Sent"),
                            ("DELIVERED", "Delivered"),
                            ("BOUNCED", "Bounced"),
                            ("FAILED", "Failed"),
                            ("OPENED", "Opened"),
                            ("CLICKED", "Clicked"),
                            ("COMPLAINED", "Complained"),
                            ("UNSUBSCRIBED", "Unsubscribed"),
                        ],
                        default="PENDING",
                        help_text="Current delivery status",
                        max_length=20,
                    ),
                ),
                (
                    "message_id",
                    models.CharField(
                        blank=True,
                        help_text="Email service provider message ID",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("opened_at", models.DateTimeField(blank=True, null=True)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
                ("bounced_at", models.DateTimeField(blank=True, null=True)),
                ("failed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if delivery failed", null=True
                    ),
                ),
                (
                    "bounce_reason",
                    models.CharField(
                        blank=True,
                        help_text="Reason for bounce if applicable",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When to send this email (for scheduled emails)",
                        null=True,
                    ),
                ),
                (
                    "campaign_id",
                    models.CharField(
                        blank=True,
                        help_text="Campaign ID for marketing emails",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "notification",
                    models.OneToOneField(
                        blank=True,
                        help_text="Associated in-app notification",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_notification",
                        to="notifications.notification",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who received this email",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Notification",
                "verbose_name_plural": "Email Notifications",
                "db_table": "notifications_email",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["user", "-created_at"], name="email_user_created_idx"),
                    models.Index(fields=["status"], name="email_status_idx"),
                    models.Index(fields=["scheduled_at"], name="email_scheduled_idx"),
                    models.Index(fields=["campaign_id"], name="email_campaign_idx"),
                    models.Index(fields=["message_id"], name="email_message_id_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="EmailCampaign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(help_text="Campaign name", max_length=255)),
                ("subject", models.CharField(help_text="Email subject", max_length=255)),
                (
                    "target_roles",
                    models.JSONField(blank=True, default=list, help_text="User roles to target"),
                ),
                (
                    "target_tenant_status",
                    models.JSONField(
                        blank=True, default=list, help_text="Tenant statuses to target"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("SCHEDULED", "Scheduled"),
                            ("SENDING", "Sending"),
                            ("SENT", "Sent"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, help_text="When to send this campaign", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("total_recipients", models.IntegerField(default=0)),
                ("emails_sent", models.IntegerField(default=0)),
                ("emails_delivered", models.IntegerField(default=0)),
                ("emails_opened", models.IntegerField(default=0)),
                ("emails_clicked", models.IntegerField(default=0)),
                ("emails_bounced", models.IntegerField(default=0)),
                ("emails_failed", models.IntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_campaigns",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific users to target (leave empty for all users)",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        help_text="Email template to use",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="notifications.emailtemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Campaign",
                "verbose_name_plural": "Email Campaigns",
                "db_table": "notifications_email_campaign",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["status"], name="email_campaign_status_idx"),
                    models.Index(fields=["scheduled_at"], name="email_campaign_scheduled_idx"),
                ],
            },
        ),
    ]
