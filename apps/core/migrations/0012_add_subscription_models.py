# Generated by Django 4.2.11 on 2025-10-25 18:08

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0011_add_tenant_status_management_fields"),
    ]

    operations = [
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the subscription plan",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Plan name (e.g., 'Starter', 'Professional', 'Enterprise')",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Detailed description of the plan features"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, help_text="Plan price in USD", max_digits=10
                    ),
                ),
                (
                    "billing_cycle",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                            ("lifetime", "Lifetime"),
                        ],
                        default="monthly",
                        help_text="Billing frequency for this plan",
                        max_length=20,
                    ),
                ),
                (
                    "user_limit",
                    models.IntegerField(default=5, help_text="Maximum number of users allowed"),
                ),
                (
                    "branch_limit",
                    models.IntegerField(default=1, help_text="Maximum number of branches allowed"),
                ),
                (
                    "inventory_limit",
                    models.IntegerField(
                        default=1000, help_text="Maximum number of inventory items allowed"
                    ),
                ),
                (
                    "storage_limit_gb",
                    models.IntegerField(
                        default=10, help_text="Maximum storage space in GB for media files"
                    ),
                ),
                (
                    "api_calls_per_month",
                    models.IntegerField(default=10000, help_text="Maximum API calls per month"),
                ),
                (
                    "enable_multi_branch",
                    models.BooleanField(
                        default=False, help_text="Enable multi-branch management features"
                    ),
                ),
                (
                    "enable_advanced_reporting",
                    models.BooleanField(
                        default=False, help_text="Enable advanced reporting and analytics"
                    ),
                ),
                (
                    "enable_api_access",
                    models.BooleanField(
                        default=False, help_text="Enable API access for integrations"
                    ),
                ),
                (
                    "enable_custom_branding",
                    models.BooleanField(
                        default=False, help_text="Enable custom branding and white-labeling"
                    ),
                ),
                (
                    "enable_priority_support",
                    models.BooleanField(
                        default=False, help_text="Enable priority customer support"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("archived", "Archived")],
                        default="active",
                        help_text="Plan status (active plans can be assigned to tenants)",
                        max_length=20,
                    ),
                ),
                (
                    "display_order",
                    models.IntegerField(
                        default=0,
                        help_text="Order in which plans are displayed (lower numbers first)",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Timestamp when the plan was created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Timestamp when the plan was last updated"
                    ),
                ),
                (
                    "archived_at",
                    models.DateTimeField(
                        blank=True, help_text="Timestamp when the plan was archived", null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription Plan",
                "verbose_name_plural": "Subscription Plans",
                "db_table": "subscription_plans",
                "ordering": ["display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="TenantSubscription",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the subscription",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("trial", "Trial"),
                            ("past_due", "Past Due"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                        ],
                        default="trial",
                        help_text="Current subscription status",
                        max_length=20,
                    ),
                ),
                (
                    "current_period_start",
                    models.DateTimeField(
                        blank=True, help_text="Start date of the current billing period", null=True
                    ),
                ),
                (
                    "current_period_end",
                    models.DateTimeField(
                        blank=True, help_text="End date of the current billing period", null=True
                    ),
                ),
                (
                    "next_billing_date",
                    models.DateTimeField(
                        blank=True, help_text="Date of the next billing charge", null=True
                    ),
                ),
                (
                    "trial_start",
                    models.DateTimeField(
                        blank=True, help_text="Start date of trial period", null=True
                    ),
                ),
                (
                    "trial_end",
                    models.DateTimeField(
                        blank=True, help_text="End date of trial period", null=True
                    ),
                ),
                (
                    "user_limit_override",
                    models.IntegerField(
                        blank=True,
                        help_text="Override for user limit (null = use plan default)",
                        null=True,
                    ),
                ),
                (
                    "branch_limit_override",
                    models.IntegerField(
                        blank=True,
                        help_text="Override for branch limit (null = use plan default)",
                        null=True,
                    ),
                ),
                (
                    "inventory_limit_override",
                    models.IntegerField(
                        blank=True,
                        help_text="Override for inventory limit (null = use plan default)",
                        null=True,
                    ),
                ),
                (
                    "storage_limit_gb_override",
                    models.IntegerField(
                        blank=True,
                        help_text="Override for storage limit in GB (null = use plan default)",
                        null=True,
                    ),
                ),
                (
                    "api_calls_per_month_override",
                    models.IntegerField(
                        blank=True,
                        help_text="Override for API calls per month (null = use plan default)",
                        null=True,
                    ),
                ),
                (
                    "enable_multi_branch_override",
                    models.BooleanField(
                        blank=True,
                        help_text="Override for multi-branch feature (null = use plan default)",
                        null=True,
                    ),
                ),
                (
                    "enable_advanced_reporting_override",
                    models.BooleanField(
                        blank=True,
                        help_text="Override for advanced reporting (null = use plan default)",
                        null=True,
                    ),
                ),
                (
                    "enable_api_access_override",
                    models.BooleanField(
                        blank=True,
                        help_text="Override for API access (null = use plan default)",
                        null=True,
                    ),
                ),
                (
                    "enable_custom_branding_override",
                    models.BooleanField(
                        blank=True,
                        help_text="Override for custom branding (null = use plan default)",
                        null=True,
                    ),
                ),
                (
                    "enable_priority_support_override",
                    models.BooleanField(
                        blank=True,
                        help_text="Override for priority support (null = use plan default)",
                        null=True,
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(
                        blank=True,
                        help_text="Stripe customer ID for payment processing",
                        max_length=255,
                    ),
                ),
                (
                    "stripe_subscription_id",
                    models.CharField(
                        blank=True, help_text="Stripe subscription ID", max_length=255
                    ),
                ),
                (
                    "cancelled_at",
                    models.DateTimeField(
                        blank=True, help_text="Timestamp when subscription was cancelled", null=True
                    ),
                ),
                (
                    "cancellation_reason",
                    models.TextField(blank=True, help_text="Reason for cancellation"),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Internal notes about this subscription"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Timestamp when the subscription was created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Timestamp when the subscription was last updated"
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        help_text="Subscription plan for this tenant",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="subscriptions",
                        to="core.subscriptionplan",
                    ),
                ),
                (
                    "tenant",
                    models.OneToOneField(
                        help_text="Tenant that owns this subscription",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tenant Subscription",
                "verbose_name_plural": "Tenant Subscriptions",
                "db_table": "tenant_subscriptions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="subscriptionplan",
            index=models.Index(fields=["status"], name="plan_status_idx"),
        ),
        migrations.AddIndex(
            model_name="subscriptionplan",
            index=models.Index(fields=["display_order"], name="plan_display_order_idx"),
        ),
        migrations.AddIndex(
            model_name="tenantsubscription",
            index=models.Index(fields=["status"], name="subscription_status_idx"),
        ),
        migrations.AddIndex(
            model_name="tenantsubscription",
            index=models.Index(fields=["next_billing_date"], name="subscription_billing_date_idx"),
        ),
        migrations.AddIndex(
            model_name="tenantsubscription",
            index=models.Index(fields=["plan", "status"], name="subscription_plan_status_idx"),
        ),
    ]
