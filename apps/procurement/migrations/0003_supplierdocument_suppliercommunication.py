# Generated by Django 4.2.11 on 2025-10-23 13:35

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("procurement", "0002_enable_rls"),
    ]

    operations = [
        migrations.CreateModel(
            name="SupplierDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("CERTIFICATION", "Certification"),
                            ("CONTRACT", "Contract"),
                            ("INSURANCE", "Insurance Document"),
                            ("TAX_DOCUMENT", "Tax Document"),
                            ("BUSINESS_LICENSE", "Business License"),
                            ("QUALITY_CERTIFICATE", "Quality Certificate"),
                            ("COMPLIANCE_DOCUMENT", "Compliance Document"),
                            ("INVOICE", "Invoice"),
                            ("RECEIPT", "Receipt"),
                            ("OTHER", "Other Document"),
                        ],
                        help_text="Type of document",
                        max_length=30,
                    ),
                ),
                ("title", models.CharField(help_text="Document title or name", max_length=255)),
                ("description", models.TextField(blank=True, help_text="Document description")),
                (
                    "file",
                    models.FileField(
                        help_text="Document file", upload_to="supplier_documents/%Y/%m/"
                    ),
                ),
                (
                    "file_size",
                    models.BigIntegerField(blank=True, help_text="File size in bytes", null=True),
                ),
                (
                    "mime_type",
                    models.CharField(blank=True, help_text="MIME type of the file", max_length=100),
                ),
                (
                    "issue_date",
                    models.DateField(
                        blank=True, help_text="Date when document was issued", null=True
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(blank=True, help_text="Date when document expires", null=True),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether document is currently active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier this document belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="procurement.supplier",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="uploaded_supplier_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "procurement_supplier_documents",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["supplier", "document_type"], name="procurement_supplie_d63036_idx"
                    ),
                    models.Index(fields=["document_type"], name="procurement_documen_198b91_idx"),
                    models.Index(fields=["expiry_date"], name="procurement_expiry__52b92c_idx"),
                    models.Index(fields=["is_active"], name="procurement_is_acti_6c77c5_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="SupplierCommunication",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "communication_type",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email"),
                            ("PHONE", "Phone Call"),
                            ("MEETING", "In-Person Meeting"),
                            ("VIDEO_CALL", "Video Call"),
                            ("SMS", "SMS/Text Message"),
                            ("LETTER", "Letter/Mail"),
                            ("OTHER", "Other"),
                        ],
                        help_text="Type of communication",
                        max_length=20,
                    ),
                ),
                (
                    "subject",
                    models.CharField(help_text="Subject or topic of communication", max_length=255),
                ),
                ("content", models.TextField(help_text="Content or summary of the communication")),
                (
                    "contact_person",
                    models.CharField(
                        blank=True, help_text="Supplier contact person involved", max_length=255
                    ),
                ),
                (
                    "requires_followup",
                    models.BooleanField(
                        default=False, help_text="Whether this communication requires follow-up"
                    ),
                ),
                (
                    "followup_date",
                    models.DateField(
                        blank=True, help_text="Date when follow-up is needed", null=True
                    ),
                ),
                (
                    "is_completed",
                    models.BooleanField(
                        default=True, help_text="Whether this communication is completed"
                    ),
                ),
                (
                    "communication_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date and time of communication",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_supplier_communications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "internal_participants",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Internal team members involved",
                        related_name="supplier_communications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier this communication is with",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communications",
                        to="procurement.supplier",
                    ),
                ),
            ],
            options={
                "db_table": "procurement_supplier_communications",
                "ordering": ["-communication_date"],
                "indexes": [
                    models.Index(
                        fields=["supplier", "-communication_date"],
                        name="procurement_supplie_fe1464_idx",
                    ),
                    models.Index(
                        fields=["communication_type"], name="procurement_communi_7af0ec_idx"
                    ),
                    models.Index(
                        fields=["requires_followup", "followup_date"],
                        name="procurement_require_c1a320_idx",
                    ),
                    models.Index(fields=["is_completed"], name="procurement_is_comp_239ddc_idx"),
                ],
            },
        ),
    ]
