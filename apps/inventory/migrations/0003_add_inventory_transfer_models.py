# Generated by Django 4.2.11 on 2025-10-23 11:47

import uuid
from decimal import Decimal

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import django_fsm


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0008_branch_manager_branch_opening_hours"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("inventory", "0002_enable_rls"),
    ]

    operations = [
        migrations.CreateModel(
            name="InventoryTransfer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the transfer",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transfer_number",
                    models.CharField(
                        help_text="Unique transfer number (e.g., TRF-20231015-001)", max_length=50
                    ),
                ),
                (
                    "status",
                    django_fsm.FSMField(
                        choices=[
                            ("pending", "Pending Approval"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("in_transit", "In Transit"),
                            ("received", "Received"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        help_text="Current status of the transfer",
                        max_length=50,
                        protected=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the transfer was requested"
                    ),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, help_text="When the transfer was approved", null=True
                    ),
                ),
                (
                    "rejected_at",
                    models.DateTimeField(
                        blank=True, help_text="When the transfer was rejected", null=True
                    ),
                ),
                (
                    "shipped_at",
                    models.DateTimeField(
                        blank=True, help_text="When the transfer was shipped", null=True
                    ),
                ),
                (
                    "received_at",
                    models.DateTimeField(
                        blank=True, help_text="When the transfer was received", null=True
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Additional notes about the transfer"),
                ),
                (
                    "rejection_reason",
                    models.TextField(blank=True, help_text="Reason for rejection"),
                ),
                (
                    "requires_approval",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this transfer requires approval (high-value items)",
                    ),
                ),
                (
                    "total_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total value of items being transferred",
                        max_digits=12,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who approved the transfer",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transfers_approved",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "from_branch",
                    models.ForeignKey(
                        help_text="Source branch sending the inventory",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers_out",
                        to="core.branch",
                    ),
                ),
                (
                    "received_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who received the transfer",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transfers_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "rejected_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who rejected the transfer",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transfers_rejected",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        help_text="User who requested the transfer",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers_requested",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shipped_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who marked the transfer as shipped",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transfers_shipped",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        help_text="Tenant that owns this transfer",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory_transfers",
                        to="core.tenant",
                    ),
                ),
                (
                    "to_branch",
                    models.ForeignKey(
                        help_text="Destination branch receiving the inventory",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers_in",
                        to="core.branch",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventory Transfer",
                "verbose_name_plural": "Inventory Transfers",
                "db_table": "inventory_transfers",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InventoryTransferItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the transfer item",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        help_text="Quantity to transfer",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "received_quantity",
                    models.IntegerField(
                        blank=True,
                        help_text="Actual quantity received (may differ from requested)",
                        null=True,
                    ),
                ),
                (
                    "has_discrepancy",
                    models.BooleanField(
                        default=False,
                        help_text="Whether there was a discrepancy between sent and received quantities",
                    ),
                ),
                (
                    "discrepancy_notes",
                    models.TextField(blank=True, help_text="Notes about any discrepancies"),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cost per unit at time of transfer",
                        max_digits=12,
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Additional notes about this item"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "inventory_item",
                    models.ForeignKey(
                        help_text="Inventory item being transferred",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfer_items",
                        to="inventory.inventoryitem",
                    ),
                ),
                (
                    "transfer",
                    models.ForeignKey(
                        help_text="Transfer this item belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="inventory.inventorytransfer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventory Transfer Item",
                "verbose_name_plural": "Inventory Transfer Items",
                "db_table": "inventory_transfer_items",
                "ordering": ["created_at"],
                "indexes": [
                    models.Index(fields=["transfer", "inventory_item"], name="transfer_item_idx")
                ],
            },
        ),
        migrations.AddIndex(
            model_name="inventorytransfer",
            index=models.Index(fields=["tenant", "status"], name="transfer_tenant_status_idx"),
        ),
        migrations.AddIndex(
            model_name="inventorytransfer",
            index=models.Index(fields=["tenant", "from_branch"], name="transfer_from_branch_idx"),
        ),
        migrations.AddIndex(
            model_name="inventorytransfer",
            index=models.Index(fields=["tenant", "to_branch"], name="transfer_to_branch_idx"),
        ),
        migrations.AddIndex(
            model_name="inventorytransfer",
            index=models.Index(fields=["tenant", "-created_at"], name="transfer_created_idx"),
        ),
        migrations.AddIndex(
            model_name="inventorytransfer",
            index=models.Index(
                fields=["status", "-created_at"], name="transfer_status_created_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inventorytransfer",
            unique_together={("tenant", "transfer_number")},
        ),
    ]
