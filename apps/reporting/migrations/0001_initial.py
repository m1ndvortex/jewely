# Generated by Django 4.2.11 on 2025-10-24 10:02

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0008_branch_manager_branch_opening_hours"),
    ]

    operations = [
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("PREDEFINED", "Pre-defined Report"),
                            ("CUSTOM", "Custom Report"),
                            ("TEMPLATE", "Report Template"),
                        ],
                        default="CUSTOM",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("ACTIVE", "Active"),
                            ("ARCHIVED", "Archived"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                (
                    "query_config",
                    models.JSONField(
                        default=dict, help_text="SQL query or data source configuration"
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        default=dict,
                        help_text="Report parameters schema (filters, date ranges, grouping)",
                    ),
                ),
                (
                    "default_parameters",
                    models.JSONField(default=dict, help_text="Default parameter values"),
                ),
                (
                    "layout_config",
                    models.JSONField(
                        default=dict,
                        help_text="Report layout configuration (columns, charts, formatting)",
                    ),
                ),
                (
                    "output_formats",
                    models.JSONField(default=list, help_text="Supported output formats"),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this report is available to all users in the tenant",
                    ),
                ),
                (
                    "allowed_roles",
                    models.JSONField(
                        default=list, help_text="List of roles allowed to access this report"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_run_at", models.DateTimeField(blank=True, null=True)),
                ("run_count", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "reporting_reports",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="ReportCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("SALES", "Sales Reports"),
                            ("INVENTORY", "Inventory Reports"),
                            ("FINANCIAL", "Financial Reports"),
                            ("CUSTOMER", "Customer Reports"),
                            ("EMPLOYEE", "Employee Reports"),
                            ("CUSTOM", "Custom Reports"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("icon", models.CharField(blank=True, help_text="CSS icon class", max_length=50)),
                ("sort_order", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "Report Categories",
                "db_table": "reporting_categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ReportSchedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("ONCE", "Run Once"),
                            ("DAILY", "Daily"),
                            ("WEEKLY", "Weekly"),
                            ("MONTHLY", "Monthly"),
                            ("QUARTERLY", "Quarterly"),
                            ("YEARLY", "Yearly"),
                            ("CUSTOM", "Custom Cron"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "cron_expression",
                    models.CharField(
                        blank=True,
                        help_text="Custom cron expression (only for CUSTOM frequency)",
                        max_length=100,
                    ),
                ),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "parameters",
                    models.JSONField(
                        default=dict, help_text="Parameters to use when running the report"
                    ),
                ),
                (
                    "output_format",
                    models.CharField(
                        choices=[
                            ("PDF", "PDF Document"),
                            ("EXCEL", "Excel Spreadsheet"),
                            ("CSV", "CSV File"),
                            ("JSON", "JSON Data"),
                            ("HTML", "HTML Page"),
                        ],
                        default="PDF",
                        max_length=10,
                    ),
                ),
                (
                    "email_recipients",
                    models.JSONField(
                        default=list, help_text="List of email addresses to send the report to"
                    ),
                ),
                ("email_subject", models.CharField(blank=True, max_length=255)),
                ("email_body", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("PAUSED", "Paused"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_run_at", models.DateTimeField(blank=True, null=True)),
                ("next_run_at", models.DateTimeField(blank=True, null=True)),
                ("run_count", models.IntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="reporting.report",
                    ),
                ),
            ],
            options={
                "db_table": "reporting_schedules",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReportParameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Parameter name (used in queries)", max_length=100),
                ),
                ("label", models.CharField(help_text="Display label for UI", max_length=255)),
                (
                    "parameter_type",
                    models.CharField(
                        choices=[
                            ("TEXT", "Text Input"),
                            ("NUMBER", "Number Input"),
                            ("DATE", "Date Picker"),
                            ("DATERANGE", "Date Range Picker"),
                            ("SELECT", "Dropdown Select"),
                            ("MULTISELECT", "Multi-Select"),
                            ("BOOLEAN", "Checkbox"),
                            ("BRANCH", "Branch Selector"),
                            ("EMPLOYEE", "Employee Selector"),
                            ("CUSTOMER", "Customer Selector"),
                            ("PRODUCT", "Product Selector"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_required", models.BooleanField(default=False)),
                ("default_value", models.JSONField(blank=True, null=True)),
                (
                    "validation_rules",
                    models.JSONField(
                        default=dict, help_text="Validation rules (min, max, pattern, etc.)"
                    ),
                ),
                (
                    "options",
                    models.JSONField(
                        default=list, help_text="Options for select parameters [{value, label}]"
                    ),
                ),
                ("sort_order", models.IntegerField(default=0)),
                (
                    "group_name",
                    models.CharField(
                        blank=True, help_text="Group parameters in UI", max_length=100
                    ),
                ),
                ("help_text", models.CharField(blank=True, max_length=500)),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parameter_definitions",
                        to="reporting.report",
                    ),
                ),
            ],
            options={
                "db_table": "reporting_parameters",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ReportExecution",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "trigger_type",
                    models.CharField(
                        choices=[("MANUAL", "Manual"), ("SCHEDULED", "Scheduled"), ("API", "API")],
                        max_length=20,
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(default=dict, help_text="Parameters used for this execution"),
                ),
                (
                    "output_format",
                    models.CharField(
                        choices=[
                            ("PDF", "PDF Document"),
                            ("EXCEL", "Excel Spreadsheet"),
                            ("CSV", "CSV File"),
                            ("JSON", "JSON Data"),
                            ("HTML", "HTML Page"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("RUNNING", "Running"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("duration_seconds", models.IntegerField(blank=True, null=True)),
                ("result_file_path", models.CharField(blank=True, max_length=500)),
                ("result_file_size", models.BigIntegerField(blank=True, null=True)),
                ("row_count", models.IntegerField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("email_sent", models.BooleanField(default=False)),
                ("email_recipients", models.JSONField(default=list)),
                ("celery_task_id", models.CharField(blank=True, max_length=255)),
                (
                    "executed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="executions",
                        to="reporting.report",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="executions",
                        to="reporting.reportschedule",
                    ),
                ),
            ],
            options={
                "db_table": "reporting_executions",
                "ordering": ["-started_at"],
            },
        ),
        migrations.AddField(
            model_name="report",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="reporting.reportcategory"
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="created_reports",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="tenant",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.tenant"),
        ),
        migrations.AddIndex(
            model_name="reportschedule",
            index=models.Index(fields=["report", "status"], name="reporting_s_report__4d24bb_idx"),
        ),
        migrations.AddIndex(
            model_name="reportschedule",
            index=models.Index(fields=["next_run_at"], name="reporting_s_next_ru_36476d_idx"),
        ),
        migrations.AddIndex(
            model_name="reportschedule",
            index=models.Index(fields=["status"], name="reporting_s_status_9043e9_idx"),
        ),
        migrations.AddConstraint(
            model_name="reportparameter",
            constraint=models.UniqueConstraint(
                fields=("report", "name"), name="unique_parameter_name_per_report"
            ),
        ),
        migrations.AddIndex(
            model_name="reportexecution",
            index=models.Index(
                fields=["report", "-started_at"], name="reporting_e_report__bcf51c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reportexecution",
            index=models.Index(fields=["status"], name="reporting_e_status_65bfca_idx"),
        ),
        migrations.AddIndex(
            model_name="reportexecution",
            index=models.Index(
                fields=["executed_by", "-started_at"], name="reporting_e_execute_5b49e5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reportexecution",
            index=models.Index(fields=["celery_task_id"], name="reporting_e_celery__629823_idx"),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(fields=["tenant", "status"], name="reporting_r_tenant__608d0d_idx"),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(
                fields=["tenant", "category"], name="reporting_r_tenant__fab440_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(fields=["created_by"], name="reporting_r_created_09f6f6_idx"),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(fields=["report_type"], name="reporting_r_report__b75eb0_idx"),
        ),
        migrations.AddConstraint(
            model_name="report",
            constraint=models.UniqueConstraint(
                fields=("tenant", "name"), name="unique_report_name_per_tenant"
            ),
        ),
    ]
