# Generated by Django 4.2.11 on 2025-10-23 22:32

import uuid
from decimal import Decimal

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0008_branch_manager_branch_opening_hours"),
        ("inventory", "0003_add_inventory_transfer_models"),
        ("pricing", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PriceOverrideRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the override request",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "current_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Current selling price",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "calculated_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price calculated by pricing engine",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "requested_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Requested new price",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "deviation_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Deviation from calculated price (requested - calculated)",
                        max_digits=12,
                    ),
                ),
                (
                    "deviation_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Deviation percentage from calculated price",
                        max_digits=7,
                    ),
                ),
                ("reason", models.TextField(help_text="Reason for requesting price override")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Approval"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        help_text="Current status of the request",
                        max_length=20,
                    ),
                ),
                (
                    "requested_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the override was requested"
                    ),
                ),
                (
                    "reviewed_at",
                    models.DateTimeField(
                        blank=True, help_text="When the request was reviewed", null=True
                    ),
                ),
                ("review_notes", models.TextField(blank=True, help_text="Notes from reviewer")),
                (
                    "rejection_reason",
                    models.TextField(blank=True, help_text="Reason for rejection"),
                ),
                (
                    "inventory_item",
                    models.ForeignKey(
                        help_text="Inventory item to override price for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_override_requests",
                        to="inventory.inventoryitem",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        help_text="User who requested the override",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="price_overrides_requested",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who reviewed (approved/rejected) the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="price_overrides_reviewed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        help_text="Tenant that owns this request",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_override_requests",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Price Override Request",
                "verbose_name_plural": "Price Override Requests",
                "db_table": "pricing_override_requests",
                "ordering": ["-requested_at"],
                "indexes": [
                    models.Index(
                        fields=["tenant", "status", "-requested_at"],
                        name="override_tenant_status_idx",
                    ),
                    models.Index(
                        fields=["inventory_item", "-requested_at"], name="override_item_date_idx"
                    ),
                    models.Index(
                        fields=["requested_by", "-requested_at"], name="override_requester_idx"
                    ),
                    models.Index(
                        fields=["status", "-requested_at"], name="override_status_date_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PriceChangeLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the price change log",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "old_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Previous selling price",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "new_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="New selling price",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "change_amount",
                    models.DecimalField(
                        decimal_places=2, help_text="Price change amount (new - old)", max_digits=12
                    ),
                ),
                (
                    "change_percentage",
                    models.DecimalField(
                        decimal_places=2, help_text="Price change percentage", max_digits=7
                    ),
                ),
                ("reason", models.TextField(help_text="Reason for price change")),
                (
                    "changed_at",
                    models.DateTimeField(auto_now_add=True, help_text="When the price was changed"),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who made the change (null for automatic changes)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="price_changes_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "inventory_item",
                    models.ForeignKey(
                        help_text="Inventory item whose price changed",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_changes",
                        to="inventory.inventoryitem",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        help_text="Tenant that owns this log entry",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_change_logs",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Price Change Log",
                "verbose_name_plural": "Price Change Logs",
                "db_table": "pricing_change_logs",
                "ordering": ["-changed_at"],
                "indexes": [
                    models.Index(
                        fields=["tenant", "-changed_at"], name="price_log_tenant_date_idx"
                    ),
                    models.Index(
                        fields=["inventory_item", "-changed_at"], name="price_log_item_date_idx"
                    ),
                    models.Index(fields=["-changed_at"], name="price_log_date_idx"),
                ],
            },
        ),
    ]
