# Generated by Django 4.2.11 on 2025-10-28 21:35

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0021_add_external_service_integration"),
    ]

    operations = [
        migrations.CreateModel(
            name="JobStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("task_name", models.CharField(db_index=True, max_length=255, unique=True)),
                ("total_executions", models.IntegerField(default=0)),
                ("successful_executions", models.IntegerField(default=0)),
                ("failed_executions", models.IntegerField(default=0)),
                (
                    "avg_execution_time",
                    models.FloatField(default=0.0, help_text="Average execution time in seconds"),
                ),
                ("min_execution_time", models.FloatField(blank=True, null=True)),
                ("max_execution_time", models.FloatField(blank=True, null=True)),
                ("avg_cpu_percent", models.FloatField(blank=True, null=True)),
                ("avg_memory_mb", models.FloatField(blank=True, null=True)),
                ("last_execution_at", models.DateTimeField(blank=True, null=True)),
                ("last_execution_status", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Job statistics",
                "db_table": "job_statistics",
                "ordering": ["task_name"],
            },
        ),
        migrations.CreateModel(
            name="JobExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("task_id", models.CharField(db_index=True, max_length=255, unique=True)),
                ("task_name", models.CharField(db_index=True, max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("STARTED", "Started"),
                            ("SUCCESS", "Success"),
                            ("FAILURE", "Failure"),
                            ("RETRY", "Retry"),
                            ("REVOKED", "Revoked"),
                        ],
                        db_index=True,
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("args", models.JSONField(blank=True, default=list)),
                ("kwargs", models.JSONField(blank=True, default=dict)),
                ("queued_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "execution_time",
                    models.FloatField(blank=True, help_text="Execution time in seconds", null=True),
                ),
                ("queue", models.CharField(db_index=True, default="default", max_length=100)),
                ("priority", models.IntegerField(default=5)),
                ("result", models.TextField(blank=True, null=True)),
                ("error", models.TextField(blank=True, null=True)),
                ("traceback", models.TextField(blank=True, null=True)),
                ("retry_count", models.IntegerField(default=0)),
                ("max_retries", models.IntegerField(default=3)),
                ("worker_name", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "job_executions",
                "ordering": ["-queued_at"],
                "indexes": [
                    models.Index(
                        fields=["task_name", "-queued_at"], name="job_executi_task_na_5efb0c_idx"
                    ),
                    models.Index(
                        fields=["status", "-queued_at"], name="job_executi_status_0e0f64_idx"
                    ),
                    models.Index(
                        fields=["queue", "-queued_at"], name="job_executi_queue_8d974b_idx"
                    ),
                ],
            },
        ),
    ]
