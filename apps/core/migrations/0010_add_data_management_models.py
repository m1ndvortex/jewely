# Generated by Django 4.2.11 on 2025-10-25 12:23

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0009_add_tenant_settings_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="DataImportMapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("inventory", "Inventory Items"),
                            ("customers", "Customers"),
                            ("sales", "Sales Records"),
                            ("suppliers", "Suppliers"),
                            ("settings", "Shop Settings"),
                            ("all", "All Data"),
                        ],
                        max_length=20,
                    ),
                ),
                ("field_mappings", models.JSONField()),
                ("validation_rules", models.JSONField(blank=True, null=True)),
                ("transformation_rules", models.JSONField(blank=True, null=True)),
                ("skip_header_row", models.BooleanField(default=True)),
                ("update_existing", models.BooleanField(default=False)),
                ("create_missing_categories", models.BooleanField(default=False)),
                ("is_default", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.tenant"
                    ),
                ),
            ],
            options={
                "db_table": "core_data_import_mapping",
                "indexes": [
                    models.Index(
                        fields=["tenant", "data_type"], name="core_data_i_tenant__68c979_idx"
                    )
                ],
                "unique_together": {("tenant", "name")},
            },
        ),
        migrations.CreateModel(
            name="DataExportTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("inventory", "Inventory Items"),
                            ("customers", "Customers"),
                            ("sales", "Sales Records"),
                            ("suppliers", "Suppliers"),
                            ("settings", "Shop Settings"),
                            ("all", "All Data"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[("csv", "CSV"), ("excel", "Excel"), ("json", "JSON")],
                        max_length=10,
                    ),
                ),
                ("fields", models.JSONField()),
                ("filters", models.JSONField(blank=True, null=True)),
                ("sort_order", models.JSONField(blank=True, null=True)),
                ("is_default", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.tenant"
                    ),
                ),
            ],
            options={
                "db_table": "core_data_export_template",
                "indexes": [
                    models.Index(
                        fields=["tenant", "data_type"], name="core_data_e_tenant__65144b_idx"
                    )
                ],
                "unique_together": {("tenant", "name")},
            },
        ),
        migrations.CreateModel(
            name="DataActivity",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("EXPORT", "Data Export"),
                            ("IMPORT", "Data Import"),
                            ("BACKUP_TRIGGER", "Manual Backup Trigger"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("inventory", "Inventory Items"),
                            ("customers", "Customers"),
                            ("sales", "Sales Records"),
                            ("suppliers", "Suppliers"),
                            ("settings", "Shop Settings"),
                            ("all", "All Data"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        blank=True,
                        choices=[("csv", "CSV"), ("excel", "Excel"), ("json", "JSON")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                ("file_path", models.CharField(blank=True, max_length=500, null=True)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("records_processed", models.IntegerField(blank=True, null=True)),
                ("records_successful", models.IntegerField(blank=True, null=True)),
                ("records_failed", models.IntegerField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("error_details", models.JSONField(blank=True, null=True)),
                ("parameters", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "initiated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.tenant"
                    ),
                ),
            ],
            options={
                "db_table": "core_data_activity",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["tenant", "-created_at"], name="core_data_a_tenant__b03b21_idx"
                    ),
                    models.Index(
                        fields=["activity_type", "status"], name="core_data_a_activit_658c4c_idx"
                    ),
                    models.Index(fields=["status"], name="core_data_a_status_ac46c2_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="BackupTrigger",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "backup_type",
                    models.CharField(
                        choices=[
                            ("FULL", "Full Database Backup"),
                            ("TENANT", "Tenant-Specific Backup"),
                            ("INCREMENTAL", "Incremental Backup"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low Priority"),
                            ("NORMAL", "Normal Priority"),
                            ("HIGH", "High Priority"),
                            ("URGENT", "Urgent"),
                        ],
                        default="NORMAL",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("QUEUED", "Queued"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("include_media", models.BooleanField(default=True)),
                ("compress_backup", models.BooleanField(default=True)),
                ("encrypt_backup", models.BooleanField(default=True)),
                ("scheduled_at", models.DateTimeField(blank=True, null=True)),
                ("backup_id", models.UUIDField(blank=True, null=True)),
                ("file_path", models.CharField(blank=True, max_length=500, null=True)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("reason", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "initiated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "db_table": "core_backup_trigger",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "priority"], name="core_backup_status_4bb1e3_idx"
                    ),
                    models.Index(
                        fields=["tenant", "-created_at"], name="core_backup_tenant__7760a0_idx"
                    ),
                    models.Index(fields=["scheduled_at"], name="core_backup_schedul_1dba20_idx"),
                ],
            },
        ),
    ]
