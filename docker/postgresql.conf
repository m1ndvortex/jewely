# PostgreSQL Configuration for Jewelry Shop SaaS Platform
# This configuration enables WAL archiving for Point-in-Time Recovery (PITR)

# WAL Configuration for PITR
# wal_level determines how much information is written to the WAL
# 'replica' is required for WAL archiving and streaming replication
wal_level = replica

# Enable WAL archiving
# This allows PostgreSQL to save completed WAL files for backup purposes
archive_mode = on

# Archive command - copy WAL files to a directory accessible by the backup system
# The %p is replaced with the path of the file to archive
# The %f is replaced with the file name only
# We use 'test ! -f' to avoid overwriting existing files
archive_command = 'test ! -f /var/lib/postgresql/wal_archive/%f && cp %p /var/lib/postgresql/wal_archive/%f'

# Archive timeout - force a WAL file switch after this many seconds
# This ensures that even with low activity, WAL files are archived regularly
# 300 seconds = 5 minutes (matches our Celery task frequency)
archive_timeout = 300

# WAL file size (default is 16MB, which is good for most cases)
# Larger files mean fewer files to manage but longer recovery time
# Smaller files mean more files but faster recovery
# 16MB is a good balance
# wal_segment_size = 16MB  # This is compile-time setting, cannot be changed here

# Number of WAL files to keep in pg_wal directory
# This should be enough to handle temporary spikes in write activity
# Default is usually sufficient (64 files = 1GB with 16MB segments)
min_wal_size = 1GB
max_wal_size = 2GB

# Checkpoint settings
# More frequent checkpoints mean faster recovery but more I/O overhead
# Less frequent checkpoints mean slower recovery but better performance
checkpoint_timeout = 15min
checkpoint_completion_target = 0.9

# WAL writer settings
# These control how often the WAL writer flushes data to disk
wal_writer_delay = 200ms
wal_writer_flush_after = 1MB

# Logging configuration for WAL archiving
# This helps debug any issues with WAL archiving
log_checkpoints = on
log_connections = on
log_disconnections = on
log_duration = off
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# Performance tuning
# These settings are optimized for a typical SaaS application
shared_buffers = 256MB
effective_cache_size = 1GB
maintenance_work_mem = 64MB
work_mem = 16MB

# Connection settings
listen_addresses = '*'
max_connections = 100
superuser_reserved_connections = 3

# Autovacuum settings
# These ensure the database stays healthy
autovacuum = on
autovacuum_max_workers = 3
autovacuum_naptime = 1min

# Statement timeout (prevent long-running queries)
# 0 means disabled, set to a reasonable value in production
statement_timeout = 0

# Lock timeout (prevent deadlocks)
lock_timeout = 0

# Timezone
timezone = 'UTC'

# Locale settings
lc_messages = 'en_US.utf8'
lc_monetary = 'en_US.utf8'
lc_numeric = 'en_US.utf8'
lc_time = 'en_US.utf8'

# Default text search configuration
default_text_search_config = 'pg_catalog.english'
