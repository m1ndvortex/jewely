# Generated by Django 4.2.11 on 2025-10-25 08:42

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("crm", "0003_giftcardtransaction"),
        ("notifications", "0004_smstemplate_smsoptout_smsnotification_smscampaign"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomerSegment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(help_text="Segment name", max_length=255)),
                ("description", models.TextField(blank=True, help_text="Segment description")),
                (
                    "segment_type",
                    models.CharField(
                        choices=[("STATIC", "Static Segment"), ("DYNAMIC", "Dynamic Segment")],
                        default="STATIC",
                        help_text="Type of segment (static or dynamic)",
                        max_length=20,
                    ),
                ),
                (
                    "criteria",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Segmentation criteria for dynamic segments",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Whether this segment is active"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer_count",
                    models.IntegerField(default=0, help_text="Number of customers in segment"),
                ),
                (
                    "last_calculated_at",
                    models.DateTimeField(
                        blank=True, help_text="When segment was last calculated", null=True
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this segment",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customers",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Customers in this segment (for static segments)",
                        to="crm.customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Segment",
                "verbose_name_plural": "Customer Segments",
                "db_table": "notifications_customer_segment",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "communication_type",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email"),
                            ("SMS", "SMS"),
                            ("IN_APP", "In-App Notification"),
                            ("PHONE", "Phone Call"),
                            ("MEETING", "In-Person Meeting"),
                            ("NOTE", "Internal Note"),
                        ],
                        help_text="Type of communication",
                        max_length=20,
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[
                            ("OUTBOUND", "Outbound"),
                            ("INBOUND", "Inbound"),
                            ("INTERNAL", "Internal"),
                        ],
                        help_text="Direction of communication",
                        max_length=20,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True, help_text="Subject or title of communication", max_length=255
                    ),
                ),
                ("content", models.TextField(help_text="Content or summary of communication")),
                (
                    "campaign_id",
                    models.CharField(
                        blank=True,
                        help_text="Campaign ID if this is part of a campaign",
                        max_length=100,
                    ),
                ),
                (
                    "was_opened",
                    models.BooleanField(default=False, help_text="Whether message was opened"),
                ),
                (
                    "was_clicked",
                    models.BooleanField(default=False, help_text="Whether links were clicked"),
                ),
                (
                    "resulted_in_conversion",
                    models.BooleanField(
                        default=False, help_text="Whether this led to a conversion"
                    ),
                ),
                (
                    "conversion_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Value of conversion if applicable",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional communication metadata"
                    ),
                ),
                (
                    "communication_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When the communication occurred",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who logged this communication",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer this communication is with",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communication_logs",
                        to="crm.customer",
                    ),
                ),
                (
                    "email_notification",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related email notification",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="notifications.emailnotification",
                    ),
                ),
                (
                    "sms_notification",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related SMS notification",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="notifications.smsnotification",
                    ),
                ),
            ],
            options={
                "verbose_name": "Communication Log",
                "verbose_name_plural": "Communication Logs",
                "db_table": "notifications_communication_log",
                "ordering": ["-communication_date"],
            },
        ),
        migrations.CreateModel(
            name="CampaignAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("campaign_id", models.CharField(help_text="Campaign identifier", max_length=100)),
                ("campaign_name", models.CharField(help_text="Campaign name", max_length=255)),
                (
                    "campaign_type",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email Campaign"),
                            ("SMS", "SMS Campaign"),
                            ("MIXED", "Mixed Campaign"),
                        ],
                        help_text="Type of campaign",
                        max_length=20,
                    ),
                ),
                (
                    "total_recipients",
                    models.IntegerField(default=0, help_text="Total recipients targeted"),
                ),
                ("messages_sent", models.IntegerField(default=0, help_text="Total messages sent")),
                (
                    "messages_delivered",
                    models.IntegerField(default=0, help_text="Messages delivered"),
                ),
                ("messages_failed", models.IntegerField(default=0, help_text="Messages failed")),
                ("emails_opened", models.IntegerField(default=0, help_text="Emails opened")),
                ("emails_clicked", models.IntegerField(default=0, help_text="Emails clicked")),
                ("emails_bounced", models.IntegerField(default=0, help_text="Emails bounced")),
                (
                    "emails_unsubscribed",
                    models.IntegerField(default=0, help_text="Unsubscribes from campaign"),
                ),
                ("conversions", models.IntegerField(default=0, help_text="Number of conversions")),
                (
                    "conversion_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total value of conversions",
                        max_digits=12,
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=4,
                        default=0,
                        help_text="Total cost of campaign",
                        max_digits=10,
                    ),
                ),
                (
                    "delivery_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Delivery rate percentage",
                        max_digits=5,
                    ),
                ),
                (
                    "open_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Open rate percentage (email only)",
                        max_digits=5,
                    ),
                ),
                (
                    "click_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Click rate percentage (email only)",
                        max_digits=5,
                    ),
                ),
                (
                    "conversion_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Conversion rate percentage",
                        max_digits=5,
                    ),
                ),
                (
                    "roi",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Return on investment percentage",
                        max_digits=8,
                    ),
                ),
                ("campaign_sent_at", models.DateTimeField(help_text="When campaign was sent")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "segment",
                    models.ForeignKey(
                        blank=True,
                        help_text="Customer segment targeted",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="notifications.customersegment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Campaign Analytics",
                "verbose_name_plural": "Campaign Analytics",
                "db_table": "notifications_campaign_analytics",
                "ordering": ["-campaign_sent_at"],
            },
        ),
        migrations.AddField(
            model_name="emailcampaign",
            name="target_segments",
            field=models.ManyToManyField(
                blank=True,
                help_text="Customer segments to target",
                to="notifications.customersegment",
            ),
        ),
        migrations.AddField(
            model_name="smscampaign",
            name="target_segments",
            field=models.ManyToManyField(
                blank=True,
                help_text="Customer segments to target",
                to="notifications.customersegment",
            ),
        ),
        migrations.AddIndex(
            model_name="customersegment",
            index=models.Index(
                fields=["segment_type", "is_active"], name="segment_type_active_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="communicationlog",
            index=models.Index(
                fields=["customer", "-communication_date"], name="comm_log_cust_date_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="communicationlog",
            index=models.Index(fields=["campaign_id"], name="comm_log_campaign_idx"),
        ),
        migrations.AddIndex(
            model_name="communicationlog",
            index=models.Index(
                fields=["communication_type", "-communication_date"], name="comm_log_type_date_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="campaignanalytics",
            index=models.Index(fields=["campaign_id"], name="analytics_campaign_id_idx"),
        ),
        migrations.AddIndex(
            model_name="campaignanalytics",
            index=models.Index(
                fields=["campaign_type", "-campaign_sent_at"], name="analytics_type_date_idx"
            ),
        ),
    ]
