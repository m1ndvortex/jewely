# Generated by Django 4.2.11 on 2025-11-01 13:12

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0025_add_documentation_models"),
        ("procurement", "0008_convert_expense_account_to_charfield"),
        ("django_ledger", "0016_remove_accountmodel_django_ledg_coa_mod_e19964_idx_and_more"),
        ("accounting", "0002_expense_purchaseorder_payment"),
    ]

    operations = [
        migrations.CreateModel(
            name="Bill",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "bill_number",
                    models.CharField(
                        help_text="Unique bill number (can be supplier's invoice number)",
                        max_length=50,
                    ),
                ),
                (
                    "bill_date",
                    models.DateField(
                        default=django.utils.timezone.now, help_text="Date when bill was issued"
                    ),
                ),
                ("due_date", models.DateField(help_text="Date when payment is due")),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Subtotal before tax",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "tax",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Tax amount",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total amount including tax",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Amount paid so far",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("APPROVED", "Approved"),
                            ("PARTIALLY_PAID", "Partially Paid"),
                            ("PAID", "Paid"),
                            ("VOID", "Void"),
                        ],
                        default="DRAFT",
                        help_text="Current status of the bill",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True, help_text="Internal notes about this bill")),
                (
                    "reference_number",
                    models.CharField(
                        blank=True, help_text="Additional reference number", max_length=100
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, help_text="Timestamp when bill was approved", null=True
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who approved this bill",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_bills",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this bill",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_bills",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "journal_entry",
                    models.ForeignKey(
                        blank=True,
                        help_text="Journal entry created for this bill",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="bills",
                        to="django_ledger.journalentrymodel",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier who issued this bill",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="bills",
                        to="procurement.supplier",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        help_text="Tenant that owns this bill",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bills",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bill",
                "verbose_name_plural": "Bills",
                "db_table": "accounting_bills",
                "ordering": ["-bill_date", "-created_at"],
            },
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="accounting_purchase_orders",
                to="core.tenant",
            ),
        ),
        migrations.CreateModel(
            name="BillPayment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "payment_date",
                    models.DateField(
                        default=django.utils.timezone.now, help_text="Date when payment was made"
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Payment amount",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.01"))],
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("CASH", "Cash"),
                            ("CHECK", "Check"),
                            ("CARD", "Credit/Debit Card"),
                            ("BANK_TRANSFER", "Bank Transfer"),
                            ("ACH", "ACH Transfer"),
                            ("WIRE", "Wire Transfer"),
                            ("OTHER", "Other"),
                        ],
                        default="CHECK",
                        help_text="Method of payment",
                        max_length=20,
                    ),
                ),
                (
                    "bank_account",
                    models.CharField(
                        blank=True, help_text="Bank account used for payment", max_length=100
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True,
                        help_text="Check number, transaction ID, or other reference",
                        max_length=100,
                    ),
                ),
                ("notes", models.TextField(blank=True, help_text="Notes about this payment")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "bill",
                    models.ForeignKey(
                        help_text="Bill this payment is for",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="payments",
                        to="accounting.bill",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who recorded this payment",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_bill_payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "journal_entry",
                    models.ForeignKey(
                        blank=True,
                        help_text="Journal entry created for this payment",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="bill_payments",
                        to="django_ledger.journalentrymodel",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        help_text="Tenant that owns this payment",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bill_payments",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bill Payment",
                "verbose_name_plural": "Bill Payments",
                "db_table": "accounting_bill_payments",
                "ordering": ["-payment_date", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["tenant", "payment_date"], name="accounting__tenant__5c9e9b_idx"
                    ),
                    models.Index(fields=["bill"], name="accounting__bill_id_3e63c4_idx"),
                    models.Index(fields=["payment_method"], name="accounting__payment_f253c1_idx"),
                    models.Index(
                        fields=["reference_number"], name="accounting__referen_7f2d64_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="BillLine",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "account",
                    models.CharField(
                        help_text="GL account code for this expense/asset", max_length=20
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the item or service", max_length=255
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.00"),
                        help_text="Quantity",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.01"))],
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price per unit",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total amount for this line (quantity × unit_price)",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Additional notes about this line item"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "bill",
                    models.ForeignKey(
                        help_text="Bill this line belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="accounting.bill",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bill Line",
                "verbose_name_plural": "Bill Lines",
                "db_table": "accounting_bill_lines",
                "ordering": ["created_at"],
                "indexes": [
                    models.Index(fields=["bill"], name="accounting__bill_id_3e256f_idx"),
                    models.Index(fields=["account"], name="accounting__account_fb052d_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="bill",
            index=models.Index(fields=["tenant", "status"], name="accounting__tenant__301638_idx"),
        ),
        migrations.AddIndex(
            model_name="bill",
            index=models.Index(
                fields=["tenant", "supplier"], name="accounting__tenant__2cb657_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bill",
            index=models.Index(
                fields=["tenant", "bill_date"], name="accounting__tenant__b85f21_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bill",
            index=models.Index(fields=["due_date"], name="accounting__due_dat_650140_idx"),
        ),
        migrations.AddIndex(
            model_name="bill",
            index=models.Index(fields=["status", "due_date"], name="accounting__status_911db3_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="bill",
            unique_together={("tenant", "bill_number")},
        ),
    ]
